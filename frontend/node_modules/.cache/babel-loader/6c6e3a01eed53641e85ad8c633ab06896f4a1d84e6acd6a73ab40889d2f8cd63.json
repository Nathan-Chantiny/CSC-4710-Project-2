{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSC\\\\CSC 4710\\\\CSC-4710-Project-2\\\\frontend\\\\src\\\\HomePage.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  const token = localStorage.getItem('token'); // Check if the user is logged in\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif',\n      lineHeight: '1.6'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '2.5rem',\n          color: '#333'\n        },\n        children: \"Welcome to the JWT Tutorial Home Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none',\n            padding: '0',\n            display: 'flex',\n            justifyContent: 'center',\n            gap: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              style: {\n                textDecoration: 'none',\n                fontSize: '1.2rem',\n                color: '#007bff'\n              },\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              style: {\n                textDecoration: 'none',\n                fontSize: '1.2rem',\n                color: '#007bff'\n              },\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), token && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/dashboard\",\n              style: {\n                textDecoration: 'none',\n                fontSize: '1.2rem',\n                color: '#007bff'\n              },\n              children: \"Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '2rem',\n          color: '#007bff',\n          textAlign: 'center',\n          marginBottom: '20px'\n        },\n        children: \"Understanding Sessions: Stateful vs. Stateless\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '1.2rem',\n          color: '#555',\n          textAlign: 'justify'\n        },\n        children: \"A session is a temporary connection between a user and a system, allowing the system to remember the user's activity. In a stateful session, the server keeps track of the user's session by storing information on the server side, using a session ID to recognize the user with each request. On the other hand, in a stateless session, the server does not store any session data. Instead, the user's data, such as authentication information, is stored on the client side in a token, like a JSON Web Token (JWT), which is sent with each request. APIs typically use stateless sessions for scalability and simplicity, since no session data is stored on the server.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          marginBottom: '40px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: '2rem',\n            color: '#007bff',\n            textAlign: 'center',\n            marginBottom: '20px'\n          },\n          children: \"What is JWT (JSON Web Token)?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '1.2rem',\n            color: '#555',\n            textAlign: 'justify'\n          },\n          children: \"JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is used for securely transmitting information between parties. JWTs are commonly used for **authentication** in web applications.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '1.2rem',\n            color: '#555',\n            textAlign: 'justify'\n          },\n          children: \"A JWT is composed of three parts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            fontSize: '1.2rem',\n            color: '#555',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Header\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), \": Contains metadata such as the type of token and signing algorithm used (e.g., HMAC SHA256).\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Payload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), \": Contains the claims or data being transmitted (e.g., user information like ID, username).\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Signature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), \": Used to verify that the token wasn\\u2019t tampered with. It's created by taking the encoded header, encoded payload, a secret, and the algorithm specified in the header.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          marginBottom: '40px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: '2rem',\n            color: '#007bff',\n            textAlign: 'center',\n            marginBottom: '20px'\n          },\n          children: \"How JWT Works\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '1.2rem',\n            color: '#555',\n            textAlign: 'justify'\n          },\n          children: \"Here\\u2019s a step-by-step breakdown of how JWT works in the context of authentication:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            fontSize: '1.2rem',\n            color: '#555',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Step 1: User Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), \" - The user enters their credentials (username and password) and submits them to the server via a login form.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Step 2: Server Generates JWT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), \" - If the credentials are valid, the server generates a JWT and sends it back to the client.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Step 3: Client Stores JWT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), \" - The client (browser or app) stores the JWT, usually in **localStorage** or **sessionStorage**.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Step 4: Client Sends JWT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), \" - For each subsequent request to a protected route, the client sends the JWT in the **Authorization** header.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Step 5: Server Verifies JWT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), \" - The server verifies the JWT using a secret key. If valid, the server processes the request and returns the response. If invalid or expired, the user is denied access.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginBottom: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"figure\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/jwtworkflow.jpeg\",\n              alt: \"JWT Workflow Diagram\",\n              style: {\n                maxWidth: '100%',\n                height: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n              style: {\n                marginTop: '10px',\n                fontStyle: 'italic',\n                color: '#666'\n              },\n              children: [\"JWT Workflow Diagram. Image source: \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://www.wallarm.com/what/oauth-vs-jwt-detailed-comparison\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"Wallarm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 53\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          marginBottom: '40px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: '2rem',\n            color: '#007bff',\n            textAlign: 'center',\n            marginBottom: '20px'\n          },\n          children: \"About This Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '1.2rem',\n            color: '#555',\n            textAlign: 'justify'\n          },\n          children: \"This project is a simple demonstration of stateless authentication using JWT. It includes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            fontSize: '1.2rem',\n            color: '#555',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"**Home Page**: This public page provides an overview of JWT and explains how it works.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"**Login**: Users can log in and receive a JWT, which is stored in the browser.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"**Register**: New users can register and create an account.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"**Dashboard**: A protected page that can only be accessed with a valid JWT.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"**Profile Page**: Another protected page that displays user information and can only be accessed with a valid JWT.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '1.2rem',\n            color: '#555',\n            textAlign: 'justify'\n          },\n          children: \"The project helps developers understand how stateless authentication works using JWT and how it can be implemented in modern web applications.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      style: {\n        textAlign: 'center',\n        padding: '10px 0',\n        borderTop: '1px solid #ddd',\n        backgroundColor: '#f5f5f5'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '0.9rem',\n          color: '#777'\n        },\n        children: \"\\xA9 2024 My Website. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","HomePage","token","localStorage","getItem","className","style","maxWidth","margin","padding","fontFamily","lineHeight","children","textAlign","marginBottom","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","listStyleType","display","justifyContent","gap","to","textDecoration","src","alt","height","fontStyle","href","target","rel","borderTop","backgroundColor","_c","$RefreshReg$"],"sources":["D:/CSC/CSC 4710/CSC-4710-Project-2/frontend/src/HomePage.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HomePage = () => {\r\n  const token = localStorage.getItem('token'); // Check if the user is logged in\r\n\r\n  return (\r\n    <div className=\"container\" style={{ maxWidth: '1200px', margin: '0 auto', padding: '20px', fontFamily: 'Arial, sans-serif', lineHeight: '1.6' }}>\r\n      {/* Header */}\r\n      <header style={{ textAlign: 'center', marginBottom: '30px' }}>\r\n        <h1 style={{ fontSize: '2.5rem', color: '#333' }}>Welcome to the JWT Tutorial Home Page</h1>\r\n        <nav style={{ marginTop: '20px' }}>\r\n          <ul style={{ listStyleType: 'none', padding: '0', display: 'flex', justifyContent: 'center', gap: '20px' }}>\r\n            <li><Link to=\"/login\" style={{ textDecoration: 'none', fontSize: '1.2rem', color: '#007bff' }}>Login</Link></li>\r\n            <li><Link to=\"/register\" style={{ textDecoration: 'none', fontSize: '1.2rem', color: '#007bff' }}>Register</Link></li>\r\n            {token && <li><Link to=\"/dashboard\" style={{ textDecoration: 'none', fontSize: '1.2rem', color: '#007bff' }}>Dashboard</Link></li>}\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n\r\n      {/* Session Information Paragraph */}\r\n      <section style={{ marginBottom: '30px' }}>\r\n        <h2 style={{ fontSize: '2rem', color: '#007bff', textAlign: 'center', marginBottom: '20px' }}>Understanding Sessions: Stateful vs. Stateless</h2>\r\n        <p style={{ fontSize: '1.2rem', color: '#555', textAlign: 'justify' }}>\r\n          A session is a temporary connection between a user and a system, allowing the system to remember the user's activity. \r\n          In a stateful session, the server keeps track of the user's session by storing information on the server side, using a session ID to recognize the user with each request. \r\n          On the other hand, in a stateless session, the server does not store any session data. Instead, the user's data, such as authentication information, is stored on the client side in a token, \r\n          like a JSON Web Token (JWT), which is sent with each request. APIs typically use stateless sessions for scalability and simplicity, since no session data is stored on the server.\r\n        </p>\r\n      </section>\r\n\r\n      {/* Main Content */}\r\n      <main>\r\n        {/* JWT Tutorial Section */}\r\n        <section style={{ marginBottom: '40px' }}>\r\n          <h2 style={{ fontSize: '2rem', color: '#007bff', textAlign: 'center', marginBottom: '20px' }}>What is JWT (JSON Web Token)?</h2>\r\n          <p style={{ fontSize: '1.2rem', color: '#555', textAlign: 'justify' }}>\r\n            JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is used for securely transmitting information between parties. JWTs are commonly used for **authentication** in web applications.\r\n          </p>\r\n          <p style={{ fontSize: '1.2rem', color: '#555', textAlign: 'justify' }}>\r\n            A JWT is composed of three parts:\r\n          </p>\r\n          <ul style={{ fontSize: '1.2rem', color: '#555', marginBottom: '20px' }}>\r\n            <li><strong>Header</strong>: Contains metadata such as the type of token and signing algorithm used (e.g., HMAC SHA256).</li>\r\n            <li><strong>Payload</strong>: Contains the claims or data being transmitted (e.g., user information like ID, username).</li>\r\n            <li><strong>Signature</strong>: Used to verify that the token wasn’t tampered with. It's created by taking the encoded header, encoded payload, a secret, and the algorithm specified in the header.</li>\r\n          </ul>\r\n        </section>\r\n\r\n        {/* How JWT Works Section with Image */}\r\n        <section style={{ marginBottom: '40px' }}>\r\n          <h2 style={{ fontSize: '2rem', color: '#007bff', textAlign: 'center', marginBottom: '20px' }}>How JWT Works</h2>\r\n          <p style={{ fontSize: '1.2rem', color: '#555', textAlign: 'justify' }}>\r\n            Here’s a step-by-step breakdown of how JWT works in the context of authentication:\r\n          </p>\r\n          <ul style={{ fontSize: '1.2rem', color: '#555', marginBottom: '20px' }}>\r\n            <li><strong>Step 1: User Login</strong> - The user enters their credentials (username and password) and submits them to the server via a login form.</li>\r\n            <li><strong>Step 2: Server Generates JWT</strong> - If the credentials are valid, the server generates a JWT and sends it back to the client.</li>\r\n            <li><strong>Step 3: Client Stores JWT</strong> - The client (browser or app) stores the JWT, usually in **localStorage** or **sessionStorage**.</li>\r\n            <li><strong>Step 4: Client Sends JWT</strong> - For each subsequent request to a protected route, the client sends the JWT in the **Authorization** header.</li>\r\n            <li><strong>Step 5: Server Verifies JWT</strong> - The server verifies the JWT using a secret key. If valid, the server processes the request and returns the response. If invalid or expired, the user is denied access.</li>\r\n          </ul>\r\n\r\n          {/* JWT Workflow Image */}\r\n          <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n            <figure>\r\n              <img \r\n                src=\"/jwtworkflow.jpeg\" \r\n                alt=\"JWT Workflow Diagram\" \r\n                style={{ maxWidth: '100%', height: 'auto' }} \r\n              />\r\n              <figcaption style={{ marginTop: '10px', fontStyle: 'italic', color: '#666' }}>\r\n                JWT Workflow Diagram. Image source: <a href=\"https://www.wallarm.com/what/oauth-vs-jwt-detailed-comparison\" target=\"_blank\" rel=\"noopener noreferrer\">Wallarm</a>.\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Project Overview Section */}\r\n        <section style={{ marginBottom: '40px' }}>\r\n          <h2 style={{ fontSize: '2rem', color: '#007bff', textAlign: 'center', marginBottom: '20px' }}>About This Project</h2>\r\n          <p style={{ fontSize: '1.2rem', color: '#555', textAlign: 'justify' }}>\r\n            This project is a simple demonstration of stateless authentication using JWT. It includes:\r\n          </p>\r\n          <ul style={{ fontSize: '1.2rem', color: '#555', marginBottom: '20px' }}>\r\n            <li>**Home Page**: This public page provides an overview of JWT and explains how it works.</li>\r\n            <li>**Login**: Users can log in and receive a JWT, which is stored in the browser.</li>\r\n            <li>**Register**: New users can register and create an account.</li>\r\n            <li>**Dashboard**: A protected page that can only be accessed with a valid JWT.</li>\r\n            <li>**Profile Page**: Another protected page that displays user information and can only be accessed with a valid JWT.</li>\r\n          </ul>\r\n          <p style={{ fontSize: '1.2rem', color: '#555', textAlign: 'justify' }}>\r\n            The project helps developers understand how stateless authentication works using JWT and how it can be implemented in modern web applications.\r\n          </p>\r\n        </section>\r\n      </main>\r\n\r\n      {/* Footer */}\r\n      <footer style={{ textAlign: 'center', padding: '10px 0', borderTop: '1px solid #ddd', backgroundColor: '#f5f5f5' }}>\r\n        <p style={{ fontSize: '0.9rem', color: '#777' }}>&copy; 2024 My Website. All rights reserved.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE7C,oBACEJ,OAAA;IAAKK,SAAS,EAAC,WAAW;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,MAAM,EAAE,QAAQ;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,mBAAmB;MAAEC,UAAU,EAAE;IAAM,CAAE;IAAAC,QAAA,gBAE9IZ,OAAA;MAAQM,KAAK,EAAE;QAAEO,SAAS,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAF,QAAA,gBAC3DZ,OAAA;QAAIM,KAAK,EAAE;UAAES,QAAQ,EAAE,QAAQ;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAJ,QAAA,EAAC;MAAqC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5FpB,OAAA;QAAKM,KAAK,EAAE;UAAEe,SAAS,EAAE;QAAO,CAAE;QAAAT,QAAA,eAChCZ,OAAA;UAAIM,KAAK,EAAE;YAAEgB,aAAa,EAAE,MAAM;YAAEb,OAAO,EAAE,GAAG;YAAEc,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAO,CAAE;UAAAb,QAAA,gBACzGZ,OAAA;YAAAY,QAAA,eAAIZ,OAAA,CAACF,IAAI;cAAC4B,EAAE,EAAC,QAAQ;cAACpB,KAAK,EAAE;gBAAEqB,cAAc,EAAE,MAAM;gBAAEZ,QAAQ,EAAE,QAAQ;gBAAEC,KAAK,EAAE;cAAU,CAAE;cAAAJ,QAAA,EAAC;YAAK;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChHpB,OAAA;YAAAY,QAAA,eAAIZ,OAAA,CAACF,IAAI;cAAC4B,EAAE,EAAC,WAAW;cAACpB,KAAK,EAAE;gBAAEqB,cAAc,EAAE,MAAM;gBAAEZ,QAAQ,EAAE,QAAQ;gBAAEC,KAAK,EAAE;cAAU,CAAE;cAAAJ,QAAA,EAAC;YAAQ;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACrHlB,KAAK,iBAAIF,OAAA;YAAAY,QAAA,eAAIZ,OAAA,CAACF,IAAI;cAAC4B,EAAE,EAAC,YAAY;cAACpB,KAAK,EAAE;gBAAEqB,cAAc,EAAE,MAAM;gBAAEZ,QAAQ,EAAE,QAAQ;gBAAEC,KAAK,EAAE;cAAU,CAAE;cAAAJ,QAAA,EAAC;YAAS;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAGTpB,OAAA;MAASM,KAAK,EAAE;QAAEQ,YAAY,EAAE;MAAO,CAAE;MAAAF,QAAA,gBACvCZ,OAAA;QAAIM,KAAK,EAAE;UAAES,QAAQ,EAAE,MAAM;UAAEC,KAAK,EAAE,SAAS;UAAEH,SAAS,EAAE,QAAQ;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAF,QAAA,EAAC;MAA8C;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjJpB,OAAA;QAAGM,KAAK,EAAE;UAAES,QAAQ,EAAE,QAAQ;UAAEC,KAAK,EAAE,MAAM;UAAEH,SAAS,EAAE;QAAU,CAAE;QAAAD,QAAA,EAAC;MAKvE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAGVpB,OAAA;MAAAY,QAAA,gBAEEZ,OAAA;QAASM,KAAK,EAAE;UAAEQ,YAAY,EAAE;QAAO,CAAE;QAAAF,QAAA,gBACvCZ,OAAA;UAAIM,KAAK,EAAE;YAAES,QAAQ,EAAE,MAAM;YAAEC,KAAK,EAAE,SAAS;YAAEH,SAAS,EAAE,QAAQ;YAAEC,YAAY,EAAE;UAAO,CAAE;UAAAF,QAAA,EAAC;QAA6B;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChIpB,OAAA;UAAGM,KAAK,EAAE;YAAES,QAAQ,EAAE,QAAQ;YAAEC,KAAK,EAAE,MAAM;YAAEH,SAAS,EAAE;UAAU,CAAE;UAAAD,QAAA,EAAC;QAEvE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJpB,OAAA;UAAGM,KAAK,EAAE;YAAES,QAAQ,EAAE,QAAQ;YAAEC,KAAK,EAAE,MAAM;YAAEH,SAAS,EAAE;UAAU,CAAE;UAAAD,QAAA,EAAC;QAEvE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJpB,OAAA;UAAIM,KAAK,EAAE;YAAES,QAAQ,EAAE,QAAQ;YAAEC,KAAK,EAAE,MAAM;YAAEF,YAAY,EAAE;UAAO,CAAE;UAAAF,QAAA,gBACrEZ,OAAA;YAAAY,QAAA,gBAAIZ,OAAA;cAAAY,QAAA,EAAQ;YAAM;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,iGAA6F;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7HpB,OAAA;YAAAY,QAAA,gBAAIZ,OAAA;cAAAY,QAAA,EAAQ;YAAO;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,+FAA2F;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5HpB,OAAA;YAAAY,QAAA,gBAAIZ,OAAA;cAAAY,QAAA,EAAQ;YAAS;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,+KAAsK;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGVpB,OAAA;QAASM,KAAK,EAAE;UAAEQ,YAAY,EAAE;QAAO,CAAE;QAAAF,QAAA,gBACvCZ,OAAA;UAAIM,KAAK,EAAE;YAAES,QAAQ,EAAE,MAAM;YAAEC,KAAK,EAAE,SAAS;YAAEH,SAAS,EAAE,QAAQ;YAAEC,YAAY,EAAE;UAAO,CAAE;UAAAF,QAAA,EAAC;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChHpB,OAAA;UAAGM,KAAK,EAAE;YAAES,QAAQ,EAAE,QAAQ;YAAEC,KAAK,EAAE,MAAM;YAAEH,SAAS,EAAE;UAAU,CAAE;UAAAD,QAAA,EAAC;QAEvE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJpB,OAAA;UAAIM,KAAK,EAAE;YAAES,QAAQ,EAAE,QAAQ;YAAEC,KAAK,EAAE,MAAM;YAAEF,YAAY,EAAE;UAAO,CAAE;UAAAF,QAAA,gBACrEZ,OAAA;YAAAY,QAAA,gBAAIZ,OAAA;cAAAY,QAAA,EAAQ;YAAkB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,iHAA6G;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzJpB,OAAA;YAAAY,QAAA,gBAAIZ,OAAA;cAAAY,QAAA,EAAQ;YAA4B;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gGAA4F;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClJpB,OAAA;YAAAY,QAAA,gBAAIZ,OAAA;cAAAY,QAAA,EAAQ;YAAyB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,qGAAiG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpJpB,OAAA;YAAAY,QAAA,gBAAIZ,OAAA;cAAAY,QAAA,EAAQ;YAAwB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,kHAA8G;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChKpB,OAAA;YAAAY,QAAA,gBAAIZ,OAAA;cAAAY,QAAA,EAAQ;YAA2B;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,6KAAyK;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5N,CAAC,eAGLpB,OAAA;UAAKM,KAAK,EAAE;YAAEO,SAAS,EAAE,QAAQ;YAAEC,YAAY,EAAE;UAAO,CAAE;UAAAF,QAAA,eACxDZ,OAAA;YAAAY,QAAA,gBACEZ,OAAA;cACE4B,GAAG,EAAC,mBAAmB;cACvBC,GAAG,EAAC,sBAAsB;cAC1BvB,KAAK,EAAE;gBAAEC,QAAQ,EAAE,MAAM;gBAAEuB,MAAM,EAAE;cAAO;YAAE;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,eACFpB,OAAA;cAAYM,KAAK,EAAE;gBAAEe,SAAS,EAAE,MAAM;gBAAEU,SAAS,EAAE,QAAQ;gBAAEf,KAAK,EAAE;cAAO,CAAE;cAAAJ,QAAA,GAAC,sCACxC,eAAAZ,OAAA;gBAAGgC,IAAI,EAAC,+DAA+D;gBAACC,MAAM,EAAC,QAAQ;gBAACC,GAAG,EAAC,qBAAqB;gBAAAtB,QAAA,EAAC;cAAO;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,KACnK;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGVpB,OAAA;QAASM,KAAK,EAAE;UAAEQ,YAAY,EAAE;QAAO,CAAE;QAAAF,QAAA,gBACvCZ,OAAA;UAAIM,KAAK,EAAE;YAAES,QAAQ,EAAE,MAAM;YAAEC,KAAK,EAAE,SAAS;YAAEH,SAAS,EAAE,QAAQ;YAAEC,YAAY,EAAE;UAAO,CAAE;UAAAF,QAAA,EAAC;QAAkB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrHpB,OAAA;UAAGM,KAAK,EAAE;YAAES,QAAQ,EAAE,QAAQ;YAAEC,KAAK,EAAE,MAAM;YAAEH,SAAS,EAAE;UAAU,CAAE;UAAAD,QAAA,EAAC;QAEvE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJpB,OAAA;UAAIM,KAAK,EAAE;YAAES,QAAQ,EAAE,QAAQ;YAAEC,KAAK,EAAE,MAAM;YAAEF,YAAY,EAAE;UAAO,CAAE;UAAAF,QAAA,gBACrEZ,OAAA;YAAAY,QAAA,EAAI;UAAsF;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/FpB,OAAA;YAAAY,QAAA,EAAI;UAA8E;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvFpB,OAAA;YAAAY,QAAA,EAAI;UAA2D;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpEpB,OAAA;YAAAY,QAAA,EAAI;UAA2E;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpFpB,OAAA;YAAAY,QAAA,EAAI;UAAkH;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzH,CAAC,eACLpB,OAAA;UAAGM,KAAK,EAAE;YAAES,QAAQ,EAAE,QAAQ;YAAEC,KAAK,EAAE,MAAM;YAAEH,SAAS,EAAE;UAAU,CAAE;UAAAD,QAAA,EAAC;QAEvE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGPpB,OAAA;MAAQM,KAAK,EAAE;QAAEO,SAAS,EAAE,QAAQ;QAAEJ,OAAO,EAAE,QAAQ;QAAE0B,SAAS,EAAE,gBAAgB;QAAEC,eAAe,EAAE;MAAU,CAAE;MAAAxB,QAAA,eACjHZ,OAAA;QAAGM,KAAK,EAAE;UAAES,QAAQ,EAAE,QAAQ;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAJ,QAAA,EAAC;MAA4C;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACiB,EAAA,GApGIpC,QAAQ;AAsGd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}